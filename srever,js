// server.js
const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const mysql = require('mysql');
const app = express();
const server = http.createServer(app);
const io = socketIo(server);

// MySQL接続設定
const db = mysql.createConnection({
    host: 'sv4.php.starfree.ne.jp',
    user: 'roomspawn_admim',
    password: 'haru33haru',
    database: 'roomspawn_nikkisite'
});

db.connect((err) => {
    if (err) {
        throw err;
    }
    console.log('MySQL Connected...');
});

app.use(express.json());
app.use(express.static('public'));

// 新しい投稿を保存し、全クライアントに送信
app.post('/api/posts', (req, res) => {
    const post = { name: req.body.name, content: req.body.content };
    const sql = 'INSERT INTO posts SET ?';
    db.query(sql, post, (err, result) => {
        if (err) {
            return res.status(500).send(err);
        }
        io.emit('new_post', { id: result.insertId, ...post, timestamp: new Date() });
        res.status(201).send({ id: result.insertId, ...post, timestamp: new Date() });
    });
});

// 全ての投稿を取得
app.get('/api/posts', (req, res) => {
    const sql = 'SELECT * FROM posts ORDER BY timestamp DESC';
    db.query(sql, (err, results) => {
        if (err) {
            return res.status(500).send(err);
        }
        res.send(results);
    });
});

// ソケット接続
io.on('connection', (socket) => {
    console.log('New client connected');
    socket.on('disconnect', () => {
        console.log('Client disconnected');
    });
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => console.log(`Server running on port ${PORT}`));
